* Implementation
** [DONE]: "Borrow" entropy bottleneck
** [DONE]: Implement interframe encoder
** [DONE]: Implement interframe decoder
** [DONE]: Implement arithmetic encoder / decoder architecture
** [DONE]: Implement mpeg's octtree encoder
** [DONE]: Test run with dataset
** [TODO]: Implement checkpoint mechanism
** [TODO]: Implement tensorboard
** [TODO]: Btter dataloader

* Writing

* Notes
** IRN
We are using Inception Residual Blocks as mentioned in https://arxiv.org/pdf/2011.03799.pdf for efficient feature aggregation 
(less computation and training time as mentioned in: https://openreview.net/pdf?id=q7kqBkL33f8LEkD3t7X9)
** Entropy bottleneck
We learn the distribution of the output tensor using the Entropy bottleneck layer and we use it to perform arithmetic
encoding and decoding of the output tensor. (https://arxiv.org/abs/1802.01436.)

** Dataset
- Loader:
Takes in a list of filepaths. Its len is the number of files
- Structure:
- Collation:


** JPEG-Pleno Dataset Loader
We need to differentiate from the other dataset loader (ShapeNet). 
- Initialize with all the ply filepaths (sorted!!)
- Use the cache mechanism